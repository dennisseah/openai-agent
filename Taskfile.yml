version: "3"
tasks:
  deterministic:
    desc: "Deterministic pattern"
    cmds:
      - python -m openai_agent.agentic_patterns.deterministic_flow

  tool-selection:
    desc: "Tool selection pattern"
    cmds:
      - python -m openai_agent.agentic_patterns.tool_selection

  tool-conditional:
    desc: "Tool conditional pattern"
    cmds:
      - python -m openai_agent.agentic_patterns.tool_conditional

  tool-force-tool-use-default:
    desc: "Force tool use pattern with default behavior"
    cmds:
      - python -m openai_agent.agentic_patterns.force_tool_use -t default

  tool-force-tool-use-first-tool:
    desc: "Force tool use pattern with first tool behavior"
    cmds:
      - python -m openai_agent.agentic_patterns.force_tool_use -t first_tool

  tool-force-tool-use-custom:
    desc: "Force tool use pattern with custom behavior"
    cmds:
      - python -m openai_agent.agentic_patterns.force_tool_use -t custom

  handoffs:
    desc: "Handoff pattern"
    cmds:
      - python -m openai_agent.agentic_patterns.handoff

  guardrail:
    desc: "Guardrail pattern"
    cmds:
      - python -m openai_agent.agentic_patterns.guardrail

  test-unit:
    desc: "Runs unit tests with pytest"
    cmds:
      - python -m pytest -p no:warnings --cov-report term-missing
        --cov=openai_agent tests

  util-format-code:
    desc: "Formats the code using ruff"
    cmds:
      - ruff format .

  util-lint:
    desc: "Runs linting with Ruff"
    cmds:
      - uv run ruff check .
      - pyright .

  util-gen-requirements-txt:
    desc: "Generates requirements.txt from the current environment"
    cmds:
      - uv lock
      - uv export --frozen --no-dev --output-file=requirements.txt
      - uv export --frozen --all-groups --output-file=requirements.dev.txt

  util-pip-audit:
    desc: "Runs pip-audit to check for vulnerabilities"
    cmds:
      - pip-audit -r requirements.txt
